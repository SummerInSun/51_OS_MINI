C51 COMPILER V9.02   UART                                                                  03/26/2016 10:58:47 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\uart.obj
COMPILER INVOKED BY: D:\msprograms\keil4\C51\BIN\C51.EXE ..\src\uart.c OPTIMIZE(2,SPEED) BROWSE INCDIR(../head;../board/
                    -head) DEBUG OBJECTEXTEND PRINT(.\uart.lst) OBJECT(.\uart.obj)

line level    source

   1          #include <uart.h>
   2          
   3          /*****************************************
   4           *独立波特率发生器串口初始化
   5           *例:uart_bartvar(24, 115200);  24M晶振初始化串口波特率115200 
   6           *可指定晶振的频率
   7           *****************************************/
   8          void uart_bartvar(uint crystal, uint32 baud)
   9          {
  10   1              SCON |= 0x50;          //REN置位为1，允许接收，SM1 = 0；SM0 = 1；
  11   1      
  12   1              AUXR |= 0x05;              //定时器2作为串口的波特率发生器
  13   1              //为定时器2赋值，进行波特率的产生
  14   1              baud = baud / 100;
  15   1              T2H = (65536 - 250000 / baud * crystal / 100) / 256;
  16   1              T2L = (65536 - 250000 / baud * crystal / 100) % 256;
  17   1      
  18   1              AUXR |= (1 << 4);      //允许定时器2运行(开启独立波特率发生器)
  19   1      
  20   1              EA = 1;                //开全局中断
  21   1      //      ES = 1;                            //开串口中断
  22   1      }
  23          
  24          /*****************************************
  25           *独立波特率发生器串口初始化
  26           *例:uart_init();  默认初始化串口波特率115200 
  27           *24M晶振专用
  28           *****************************************/
  29          void uart_init()
  30          {
  31   1              SCON = 0x50;            //8位数据,可变波特率
  32   1              AUXR |= 0x01;           //串口1选择定时器2为波特率发生器
  33   1              AUXR |= 0x04;           //定时器2时钟为Fosc,即1T
  34   1              T2L = 0xCC;             //设定定时初值
  35   1              T2H = 0xFF;             //设定定时初值
  36   1              AUXR |= 0x10;           //启动定时器2
  37   1      }
  38          
  39          /*****************************************
  40           *串口发送一个字节
  41           *例:uart_send_byte('A');  发送字符A
  42           *****************************************/
  43          void uart_send_byte(uchar tx_data)
  44          {
  45   1              EA = 0;
  46   1              SBUF = tx_data;
  47   1              while(!TI);
  48   1              TI = 0;
  49   1              EA = 1;
  50   1      }
  51          
  52          /*****************************************
  53           *串口发送一个字符串并返回字串的长度
  54           *例:uart_send_str("www.yellowmax.top");  发送字符串www.yellowmax.top
C51 COMPILER V9.02   UART                                                                  03/26/2016 10:58:47 PAGE 2   

  55           *****************************************/
  56          unsigned char uart_send_str(uchar* str)
  57          {
  58   1              xdata uint8 i = 0;
  59   1              
  60   1              while(*str)
  61   1              {
  62   2                      uart_send_byte(*str ++);
  63   2                      i ++;
  64   2              }
  65   1      
  66   1              return i;
  67   1      }
  68          
  69          /*****************************************
  70           *串口接收一个字节
  71           *例:receive_byte = uart_reve_byte(); 接收一个字节到receive_byte里面  
  72           *****************************************/
  73          uchar uart_reve_byte(void)
  74          {
  75   1              if(RI)
  76   1              {
  77   2                      RI = 0;
  78   2                      return SBUF;
  79   2              }
  80   1              return 0;
  81   1      }
  82          
  83          /*****************************************
  84           *串口等待接收一个字节
  85           *例:receive_byte = uart_wait_byte(); 接收一个字节到receive_byte里面  
  86           *****************************************/
  87          uchar uart_wait_byte(void)
  88          {
  89   1              while(!RI);
  90   1              RI = 0;
  91   1      
  92   1              return SBUF;
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    326    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
