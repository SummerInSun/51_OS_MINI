C51 COMPILER V9.02   NT_LED                                                                03/19/2016 11:34:48 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE NT_LED
OBJECT MODULE PLACED IN .\nt_led.obj
COMPILER INVOKED BY: D:\msprograms\keil4\C51\BIN\C51.EXE ..\board\src\nt_led.c OPTIMIZE(2,SPEED) BROWSE INCDIR(../head;.
                    -./board/head) DEBUG OBJECTEXTEND PRINT(.\nt_led.lst) OBJECT(.\nt_led.obj)

line level    source

   1          #include <nt_led.h>
   2          
   3          code uchar duan[]  = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90,0xFF};
   4          code uchar wei[]   = {0xF0,0xF1,0xF2,0xF3,0xF4,0xF5};
   5          code uchar l_wei[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};    //蓝桥杯板子的位选
   6          
   7          code uchar dula_yin[] = {0x3f,0x06,0x5b,0x4f, 0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c, 0x39,0x5e,0x79,0x71
             -};
   8          code uchar wela_yin[] = {0xFE,0xFD,0xFB,0xF7}; 
   9          
  10          /*****************************************
  11           *蓝桥杯板子数码管显示函数 
  12           *例:lq_disp(32,num_check,num_div) 显示32 
  13           *****************************************/
  14          void lq_disp(uint32 num, uchar bcd_flag)
  15          {
  16   1              static xdata uint32 change_flag = 0;
  17   1              static xdata uchar cont = 0;
  18   1              static xdata uchar num_div[6];
  19   1              xdata unsigned char zero_flag = 0; 
  20   1      
  21   1              if(num != change_flag)
  22   1              {
  23   2                      change_flag = num;
  24   2                      
  25   2                      if(bcd_flag)
  26   2                      {
  27   3                              num_div[0] = num >> 16 & 0x0F;
  28   3                              num_div[1] = num >> 14 & 0x0F;
  29   3                              num_div[2] = num >> 12 & 0x0F;
  30   3                              num_div[3] = num >> 8 & 0x0F;
  31   3                              num_div[4] = num >> 4 & 0x0F;
  32   3                              num_div[5] = num & 0x0F;        
  33   3                      }
  34   2                      else
  35   2                      {
  36   3                              num_div[0] = num / 100000;
  37   3                              num_div[1] = num % 100000 / 10000;
  38   3                              num_div[2] = num % 10000  / 1000;
  39   3                              num_div[3] = num % 1000   / 100;
  40   3                              num_div[4] = num % 100    / 10;
  41   3                              num_div[5] = num % 10;
  42   3                      
  43   3                              for(zero_flag = 0; zero_flag < 6; zero_flag ++)
  44   3                              {
  45   4                                      if(num_div[zero_flag] != 0)
  46   4                                      {
  47   5                                              break;
  48   5                                      }
  49   4                                      num_div[zero_flag] = 10;
  50   4                              }
  51   3                      }
  52   2              }
  53   1              if(cont >= 6)
C51 COMPILER V9.02   NT_LED                                                                03/19/2016 11:34:48 PAGE 2   

  54   1              {
  55   2                      cont = 0;
  56   2              }
  57   1              switch(cont)
  58   1              {
  59   2                      case 0: {P0 = l_wei[2]; P2 = (6 << 5); P42 = 0; P42 = 1; P0 = 0xFF; P2 = (7 << 5); P42 = 0; P0 = duan[nu
             -m_div[0]]; P42 = 1; cont++; break;}
  60   2                      case 1: {P0 = l_wei[3]; P2 = (6 << 5); P42 = 0; P42 = 1; P0 = 0xFF; P2 = (7 << 5); P42 = 0; P0 = duan[nu
             -m_div[1]]; P42 = 1; cont++; break;}
  61   2                      case 2: {P0 = l_wei[4]; P2 = (6 << 5); P42 = 0; P42 = 1; P0 = 0xFF; P2 = (7 << 5); P42 = 0; P0 = duan[nu
             -m_div[2]]; P42 = 1; cont++; break;}
  62   2                      case 3: {P0 = l_wei[5]; P2 = (6 << 5); P42 = 0; P42 = 1; P0 = 0xFF; P2 = (7 << 5); P42 = 0; P0 = duan[nu
             -m_div[3]]; P42 = 1; cont++; break;}
  63   2                      case 4: {P0 = l_wei[6]; P2 = (6 << 5); P42 = 0; P42 = 1; P0 = 0xFF; P2 = (7 << 5); P42 = 0; P0 = duan[nu
             -m_div[4]]; P42 = 1; cont++; break;}
  64   2                      case 5: {P0 = l_wei[7]; P2 = (6 << 5); P42 = 0; P42 = 1; P0 = 0xFF; P2 = (7 << 5); P42 = 0; P0 = duan[nu
             -m_div[5]]; P42 = 1; cont++; break;}
  65   2                      default: break;
  66   2              }
  67   1      }
  68          
  69          /*****************************************
  70           *数码管显示函数 
  71           *例:nt_disp(32,num_check,num_div) 显示32 
  72           *****************************************/
  73          void nt_disp(uint num,uint num_check,uchar num_div[])
  74          {
  75   1              if(num - num_check)
  76   1              {
  77   2                      num_div[0] = num / 100000;
  78   2                      num_div[1] = num % 100000 / 10000;
  79   2                      num_div[2] = num % 10000  / 1000;
  80   2                      num_div[3] = num % 1000   / 100;
  81   2                      num_div[4] = num % 100    / 10;
  82   2                      num_div[5] = num % 10;
  83   2      
  84   2                      num_check = num;
  85   2              }
  86   1      
  87   1               P0 = duan[num_div[0]]; P2 |= 0x07; P2 &= wei[0];       delay(1);
  88   1               P0 = duan[num_div[1]]; P2 |= 0x07; P2 &= wei[1];       delay(1);
  89   1               P0 = duan[num_div[2]]; P2 |= 0x07; P2 &= wei[2];       delay(1);
  90   1               P0 = duan[num_div[3]]; P2 |= 0x07; P2 &= wei[3];       delay(1);
  91   1               P0 = duan[num_div[4]]; P2 |= 0x07; P2 &= wei[4];       delay(1);
  92   1               P0 = duan[num_div[5]]; P2 |= 0x07; P2 &= wei[5];       delay(1);
  93   1      }
  94          
  95          /*****************************************
  96           *数码管显示函数，用于中断函数内部 
  97           *例:nt_disp(32, cont) 显示32 
  98           *****************************************/
  99          void nt_disp_vector(uint32 num, uchar cont)
 100          {
 101   1              uchar num_div[6];
 102   1              
 103   1              num_div[0] = num / 100000;
 104   1              num_div[1] = num % 100000 / 10000;
 105   1              num_div[2] = num % 10000  / 1000;
 106   1              num_div[3] = num % 1000   / 100;
 107   1              num_div[4] = num % 100    / 10;
 108   1              num_div[5] = num % 10;
 109   1      
C51 COMPILER V9.02   NT_LED                                                                03/19/2016 11:34:48 PAGE 3   

 110   1              switch(cont)
 111   1              {
 112   2                      case 0: {P2 = wei[0]; P0 = duan[num_div[0]]; break;}
 113   2                      case 1: {P2 = wei[1]; P0 = duan[num_div[1]]; break;}
 114   2                      case 2: {P2 = wei[2]; P0 = duan[num_div[2]]; break;}
 115   2                      case 3: {P2 = wei[3]; P0 = duan[num_div[3]]; break;}
 116   2                      case 4: {P2 = wei[4]; P0 = duan[num_div[4]]; break;}
 117   2                      case 5: {P2 = wei[5]; P0 = duan[num_div[5]]; break;}    
 118   2      
 119   2                      default: break;
 120   2              }
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1750    ----
   CONSTANT SIZE    =     45    ----
   XDATA SIZE       =     11       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
