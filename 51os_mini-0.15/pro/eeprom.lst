C51 COMPILER V9.02   EEPROM                                                                03/26/2016 10:04:22 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\eeprom.obj
COMPILER INVOKED BY: D:\msprograms\keil4\C51\BIN\C51.EXE ..\src\eeprom.c OPTIMIZE(2,SPEED) BROWSE INCDIR(../head;../boar
                    -d/head) DEBUG OBJECTEXTEND PRINT(.\eeprom.lst) OBJECT(.\eeprom.obj)

line level    source

   1          #include <eeprom.h>
   2          #include <common.h>
   3          
   4          /*****************************************
   5           * EEPROM写入数据
   6           * 例:iap_write(10,'A'); 向地址为10的EEPROM写入数据A
   7           *****************************************/
   8          void iap_write(uint address, uchar wdata)
   9          {
  10   1              clear_iap;
  11   1              if(!check_iap)                                          //判断电压是否满足需求
  12   1              {
  13   2                      IAP_CONTR = 0x01;                               //24M设为1
  14   2                      IAP_CONTR |= 0x80;                              //使能
  15   2                      IAP_CMD   = CMD_WRITE;          //选择命令为‘写命令’
  16   2                      IAP_ADDRH = address >> 8;               //写地址高位
  17   2                      IAP_ADDRL = address;                //写地址低位
  18   2              
  19   2                      IAP_DATA  = wdata;
  20   2                      IAP_TRIG=0x5A;IAP_TRIG=0XA5;
  21   2                      _nop_();_nop_();                                //触发操作，写入数据
  22   2      
  23   2              }
  24   1      }
  25          
  26          /*****************************************
  27           * EEPROM读出数据
  28           * 例:dat = iap_read(10); 读地址为10的EEPROM存入dat
  29           *****************************************/
  30          uchar iap_read(uint address)
  31          {
  32   1              uchar rdata;
  33   1      
  34   1              clear_iap;
  35   1              if(!check_iap)                          //判断电压是否满足需求
  36   1              {
  37   2                      IAP_CONTR = 0x01;                               //24M设为1
  38   2                      IAP_CONTR |= 0x80;                              //使能
  39   2                      IAP_CMD   = CMD_READ;           //选择命令为‘写命令’
  40   2                      IAP_ADDRH = address >> 8;               //写地址高位
  41   2                      IAP_ADDRL = address;                //写地址低位
  42   2                      
  43   2                      IAP_TRIG=0x5A;IAP_TRIG=0XA5;
  44   2                      _nop_();_nop_();                                //触发操作，触发读入数据
  45   2                      rdata     = IAP_DATA;
  46   2      
  47   2              }
  48   1      
  49   1              return rdata;
  50   1      }
  51          
  52          /*****************************************
  53           * EEPROM擦除数据
  54           * 例:iap_erase(0); 擦除EEPROM数据
C51 COMPILER V9.02   EEPROM                                                                03/26/2016 10:04:22 PAGE 2   

  55           *****************************************/
  56          void iap_erase(uint address)
  57          {
  58   1              clear_iap;
  59   1              if(!check_iap)                                          //判断电压是否满足需求
  60   1              {
  61   2                      IAP_CONTR = 0x01;                               //24M设为1
  62   2                      IAP_CONTR |= 0x80;                              //使能
  63   2                      IAP_CMD   = CMD_ERASE;          //选择命令为‘写命令’
  64   2                      IAP_ADDRH = address / 256;              //写地址高位
  65   2                      IAP_ADDRL = address % 256;              //写地址低位
  66   2                      
  67   2                      IAP_TRIG=0x5A;IAP_TRIG=0XA5;
  68   2                      _nop_();_nop_();                                //触发操作，触发擦除数据
  69   2      
  70   2              }
  71   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    133    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
