C51 COMPILER V9.02   TASK                                                                  03/10/2016 13:35:15 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE TASK
OBJECT MODULE PLACED IN .\task.obj
COMPILER INVOKED BY: D:\msprograms\keil4\C51\BIN\C51.EXE ..\src\task.c OPTIMIZE(2,SPEED) BROWSE INCDIR(../head) DEBUG OB
                    -JECTEXTEND PRINT(.\task.lst) OBJECT(.\task.obj)

line level    source

   1          #include "task.h"
   2          
   3          /* 任务字串解析标志,解析完成标志置0,正在解析标志置1 */
   4          xdata unsigned char parse_commond_flag = 0;
   5          
   6          /* 等待命令解析 */
   7          void wait_parse(void)
   8          {
   9   1              parse_commond_flag = 1;
  10   1      
  11   1              while(parse_commond_flag)
  12   1              {
  13   2                      task_delay(2);  //阻塞，等待一个周期再来查询命令是否解析完毕
  14   2              }
  15   1      
  16   1      }
  17          
  18          void task1(void)
  19          {
  20   1              xdata unsigned char i = 1;
  21   1      
  22   1              P0 = 0x01;
  23   1              OS_delay(1000);
  24   1              while(1)
  25   1              {
  26   2                      if(P0 == 0x80)
  27   2                      {
  28   3                              P0 = 0x01;
  29   3                      }
  30   2                      else
  31   2                              P0 = P0 << 1;
  32   2                      OS_delay(50);           
  33   2              }
  34   1                      
  35   1      }
  36          
  37          void task0(void)
  38          {
  39   1              while(1)
  40   1              {
  41   2      
  42   2              }
  43   1      }
  44          
  45          /* 串口接收字符串进行回显，并把字符串放入一个缓冲区，之后发送命令消息给消息处理函数并解析执行 */
  46          void task_tty0(void)
  47          {
  48   1              static xdata unsigned int reve_buf_len = 0;     //初始化串口接收到的数据串长度为0
  49   1      
  50   1              printf("#");    //开机打印出提示符
  51   1      
  52   1              while(1)
  53   1              {
  54   2                      while(1)
C51 COMPILER V9.02   TASK                                                                  03/10/2016 13:35:15 PAGE 2   

  55   2                      {       
  56   3                              reve_buff[reve_buf_len] = uart_reve_byte();     //接收到一个字符并存取到接收缓冲区里面
  57   3                              if(reve_buff[reve_buf_len] == 0)                        //如果没有接收到字串，继续查询
  58   3                              {
  59   4                                      task_delay(2);                                                  //延时两个任务周期，以便其他任务继续执行
  60   4                              }
  61   3                              else
  62   3                                      break;
  63   3                      }
  64   2      
  65   2                      if(reve_buf_len >= 254)
  66   2                      {
  67   3                              
  68   3                              printf("\r\nToo much words\r\n");               //用户输入的字符数量过多
  69   3                              printf("Please input your commond again and dont't input too much\r\n#");               
  70   3      //                      clear_char_str(reve_buff, 256);         //清除整个数组，其实清除不清除并不影响，此处暂且注释掉
  71   3                              reve_buf_len = 0;
  72   3                      }       
  73   2                      else
  74   2                      {
  75   3                              if(reve_buff[reve_buf_len] == '\r')             //接收到换行符
  76   3                              {
  77   4                                      reve_buff[reve_buf_len] = '\0';         //将当前的换行字符替换为字符串结束符用来比较
  78   4                                      DESUSPEND_TASK(TASK_MSGHANDLER);        //消息处理函数解挂起
  79   4                                      wait_parse();                                           //等待命令解析完成
  80   4      //                              clear_char_str(reve_buff, 256);         //清除整个数组，其实清除不清除并不影响，此处暂且注释掉
  81   4                                      reve_buf_len = 0;                                       //字串的索引置0以便重新接受输入
  82   4                              }
  83   3                              else
  84   3                              {
  85   4                                      uart_send_byte(reve_buff[reve_buf_len]);        //将刚刚接收到的一个字节并且发送给串口软件显示
  86   4                                      reve_buf_len ++;                                                        //字串索引值加1
  87   4                              }
  88   3                              
  89   3                      }
  90   2              }       
  91   1      }
  92          
  93          /* 消息处理函数，对串口接收到的命令进行相应的处理 */
  94          void task_msghandler(void)
  95          {
  96   1              while(1)
  97   1              {
  98   2                      uart_send_str("\r\n");
  99   2                      if(!os_strcmp("test", reve_buff))
 100   2                      {
 101   3                              uart_send_str("You do a 'test' commond");
 102   3                      }
 103   2                      else if(!os_strcmp("kill", reve_buff))
 104   2                      {
 105   3                              uart_send_str("You do a 'kill' commond, please input the pid number");
 106   3                      }
 107   2                      else
 108   2                      {
 109   3                              uart_send_str(reve_buff);
 110   3                              uart_send_str(": undefined commond");
 111   3                      }
 112   2                      
 113   2                      uart_send_str("\r\n#"); //发送提示符
 114   2                      parse_commond_flag = 0; //任务解析完毕
 115   2                      SUSPEND_TASK(TASK_MSGHANDLER);  //自挂起，应该先挂起再等待
 116   2                      OS_delay(10);                   //等待一个任务周期，避免多次执行到任务  
C51 COMPILER V9.02   TASK                                                                  03/10/2016 13:35:15 PAGE 3   

 117   2              }
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    434    ----
   CONSTANT SIZE    =    196    ----
   XDATA SIZE       =      3       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
