C51 COMPILER V9.02   NT_LED                                                                01/31/2016 12:31:26 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE NT_LED
OBJECT MODULE PLACED IN .\nt_led.obj
COMPILER INVOKED BY: D:\Program Files\keil4\C51\BIN\C51.EXE ..\src\nt_led.c BROWSE INCDIR(..\head) DEBUG OBJECTEXTEND PR
                    -INT(.\nt_led.lst) OBJECT(.\nt_led.obj)

line level    source

   1          #include <nt_led.h>
   2          
   3          uchar duan[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
   4          uchar wei[]  = {0x00,0x01,0x02,0x03,0x04,0x05};
   5          
   6          /*****************************************
   7           *数码管显示函数 
   8           *例:nt_disp(32,num_check,num_div) 显示32 
   9           *****************************************/
  10          void nt_disp(uint num,uint num_check,uchar num_div[])
  11          {
  12   1              if(num - num_check)
  13   1              {
  14   2                      num_div[0] = num / 100000;
  15   2                      num_div[1] = num % 100000 / 10000;
  16   2                      num_div[2] = num % 10000  / 1000;
  17   2                      num_div[3] = num % 1000   / 100;
  18   2                      num_div[4] = num % 100    / 10;
  19   2                      num_div[5] = num % 10;
  20   2      
  21   2                      num_check = num;
  22   2              }
  23   1      
  24   1              P2 = wei[0]; P0 = duan[num_div[0]];     delay_ms(1);
  25   1              P2 = wei[1]; P0 = duan[num_div[1]];     delay_ms(1);
  26   1              P2 = wei[2]; P0 = duan[num_div[2]];     delay_ms(1);
  27   1              P2 = wei[3]; P0 = duan[num_div[3]];     delay_ms(1);
  28   1              P2 = wei[4]; P0 = duan[num_div[4]];     delay_ms(1);
  29   1              P2 = wei[5]; P0 = duan[num_div[5]];     delay_ms(1);
  30   1      }
  31          
  32          /*****************************************
  33           *数码管显示函数，用于中断函数内部 
  34           *例:nt_disp(32,num_check,cont,num_div) 显示32 
  35           *****************************************/
  36          void nt_disp_vector(uint num,uint num_check,uchar cont,uchar num_div[])
  37          {
  38   1              if(num - num_check)
  39   1              {
  40   2                      num_div[0] = num / 100000;
  41   2                      num_div[1] = num % 100000 / 10000;
  42   2                      num_div[2] = num % 10000  / 1000;
  43   2                      num_div[3] = num % 1000   / 100;
  44   2                      num_div[4] = num % 100    / 10;
  45   2                      num_div[5] = num % 10;
  46   2      
  47   2                      num_check = num;
  48   2              }
  49   1      
  50   1              switch(cont)
  51   1              {
  52   2                      case 0: {P2 = wei[0]; P0 = duan[num_div[0]]; break;}
  53   2                      case 1: {P2 = wei[1]; P0 = duan[num_div[1]]; break;}
  54   2                      case 2: {P2 = wei[2]; P0 = duan[num_div[2]]; break;}
C51 COMPILER V9.02   NT_LED                                                                01/31/2016 12:31:26 PAGE 2   

  55   2                      case 3: {P2 = wei[3]; P0 = duan[num_div[3]]; break;}
  56   2                      case 4: {P2 = wei[4]; P0 = duan[num_div[4]]; break;}
  57   2                      case 5: {P2 = wei[5]; P0 = duan[num_div[5]]; break;}    
  58   2      
  59   2                      default: break;
  60   2              }
  61   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    774    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
