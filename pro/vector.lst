C51 COMPILER V9.02   VECTOR                                                                01/31/2016 12:31:26 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE VECTOR
OBJECT MODULE PLACED IN .\vector.obj
COMPILER INVOKED BY: D:\Program Files\keil4\C51\BIN\C51.EXE ..\src\vector.c BROWSE INCDIR(..\head) DEBUG OBJECTEXTEND PR
                    -INT(.\vector.lst) OBJECT(.\vector.obj)

line level    source

   1          #include <vector.h>
   2          
   3          /**********基于32M晶振**********/
   4          
   5          /*****************************************
   6           *定时器1初始化函数
   7           *例:timer1_init(1000); 定时1000us 
   8           *****************************************/
   9          void timer1_init(uint time_us)
  10          {
  11   1              uint time_mod;
  12   1      
  13   1              if(time_us <= 24576)                              //判断是否超过定时器能够设定的最大值
  14   1              {
  15   2                      time_mod = 65536 - (time_us * 32 / 12);           //计算定时器需要装入的数值
  16   2                      TH1 = time_mod >> 8;                                              //高位数据写入
  17   2                      TL1 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
  18   2              }
  19   1              else
  20   1              {
  21   2                      TH1 = 0;                                                                          //否则按最小值装入
  22   2                      TL1 = 0;
  23   2              }
  24   1      
  25   1          TMOD = 0x10;                                                                          //定时器1工作于十六位定时器模式
  26   1              ET1 = 1;                                                                                  //使能定时器1
  27   1              TR1 = 1;                                                                                  //开始计时
  28   1              EA  = 1;                                                                                  //开全局中断
  29   1      }
  30          
  31          /*****************************************
  32           *中断函数内部更新定时器赋值函数 
  33           *例:timer1_update(1000); 重装定时器初值为1000us 
  34           *****************************************/
  35          void timer1_update(uint time_us)
  36          {
  37   1              uint time_mod;
  38   1      
  39   1              if(time_us <= 24576)                                                      //判断是否超过定时器能够设定的最大值
  40   1              {                                                                                                 
  41   2                      time_mod = 65536 - (time_us * 32 / 12);           //计算定时器需要装入的数值
  42   2                      TH1 = time_mod >> 8;                                              //高位数据写入
  43   2                      TL1 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
  44   2              }                                                                                                 
  45   1              else                                                                                      
  46   1              {                                                                                                 
  47   2                      TH1 = 0;                                                                          //否则按最小值装入
  48   2                      TL1 = 0;
  49   2              }
  50   1      }
  51          
  52          /*****************************************
  53           *定时器0初始化函数
  54           *例:timer0_init(1000); 定时1000us 
C51 COMPILER V9.02   VECTOR                                                                01/31/2016 12:31:26 PAGE 2   

  55           *****************************************/
  56          void timer0_init(uint time_us)
  57          {
  58   1              uint time_mod;
  59   1      
  60   1              if(time_us <= 24576)                                                      //判断是否超过定时器能够设定的最大值
  61   1              {                                                                                                 
  62   2                      time_mod = 65536 - (time_us * 32 / 12);           //计算定时器需要装入的数值
  63   2                      TH0 = time_mod >> 8;                                              //高位数据写入
  64   2                      TL0 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
  65   2              }                                                                                                 
  66   1              else                                                                                      
  67   1              {                                                                                                 
  68   2                      TH0 = 0;                                                                          //否则按最小值装入
  69   2                      TL0 = 0;                                                                          
  70   2              }                                                                                                 
  71   1                                                                                                                
  72   1          TMOD = 0x01;                                                                          //定时器0工作于十六位定时器模式
  73   1              ET0 = 1;                                                                                  //使能定时器1
  74   1              TR0 = 1;                                                                                  //开始计时
  75   1              EA  = 1;                                                                                  //开全局中断
  76   1      }
  77          
  78          /*****************************************
  79           *中断函数内部更新定时器赋值函数 
  80           *例:timer0_update(1000); 重装定时器初值为1000us 
  81           *****************************************/
  82          void timer0_update(uint time_us)
  83          {
  84   1              uint time_mod;
  85   1      
  86   1              if(time_us <= 24576)                                                      //判断是否超过定时器能够设定的最大值
  87   1              {                                                                                                 
  88   2                      time_mod = 65536 - (time_us * 32 / 12);           //计算定时器需要装入的数值
  89   2                      TH0 = time_mod >> 8;                                              //高位数据写入
  90   2                      TL0 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
  91   2              }                                                                                                 
  92   1              else                                                                                      
  93   1              {                                                                                                 
  94   2                      TH0 = 0;                                                                          //否则按最小值装入
  95   2                      TL0 = 0;                                                                          
  96   2              }                                                                                                 
  97   1      }       
  98          
  99          /**********基于11M晶振**********/
 100          
 101          /*****************************************
 102           *定时器1初始化函数
 103           *例:timer1_init11(1000); 定时1000us 
 104           *****************************************/
 105          void timer1_init11(uint time_us)
 106          {
 107   1              uint time_mod;
 108   1      
 109   1              if(time_us <= 24576)                              //判断是否超过定时器能够设定的最大值
 110   1              {
 111   2                      time_mod = 65536 - (time_us * 11 / 12);           //计算定时器需要装入的数值
 112   2                      TH1 = time_mod >> 8;                                              //高位数据写入
 113   2                      TL1 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
 114   2              }
 115   1              else
 116   1              {
C51 COMPILER V9.02   VECTOR                                                                01/31/2016 12:31:26 PAGE 3   

 117   2                      TH1 = 0;                                                                          //否则按最小值装入
 118   2                      TL1 = 0;
 119   2              }
 120   1      
 121   1          TMOD = 0x10;                                                                          //定时器1工作于十六位定时器模式
 122   1              ET1 = 1;                                                                                  //使能定时器1
 123   1              TR1 = 1;                                                                                  //开始计时
 124   1              EA  = 1;                                                                                  //开全局中断
 125   1      }
 126          
 127          /*****************************************
 128           *中断函数内部更新定时器赋值函数 
 129           *例:timer1_update11(1000); 重装定时器初值为1000us 
 130           *****************************************/
 131          void timer1_update11(uint time_us)
 132          {
 133   1              uint time_mod;
 134   1      
 135   1              if(time_us <= 24576)                                                      //判断是否超过定时器能够设定的最大值
 136   1              {                                                                                                 
 137   2                      time_mod = 65536 - (time_us * 11 / 12);           //计算定时器需要装入的数值
 138   2                      TH1 = time_mod >> 8;                                              //高位数据写入
 139   2                      TL1 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
 140   2              }                                                                                                 
 141   1              else                                                                                      
 142   1              {                                                                                                 
 143   2                      TH1 = 0;                                                                          //否则按最小值装入
 144   2                      TL1 = 0;
 145   2              }
 146   1      }
 147          
 148          /*****************************************
 149           *定时器0初始化函数
 150           *例:timer0_init(1000); 定时1000us 
 151           *****************************************/
 152          void timer0_init11(uint time_us)
 153          {
 154   1              uint time_mod;
 155   1      
 156   1              if(time_us <= 24576)                                                      //判断是否超过定时器能够设定的最大值
 157   1              {                                                                                                 
 158   2                      time_mod = 65536 - (time_us * 11 / 12);           //计算定时器需要装入的数值
 159   2                      TH0 = time_mod >> 8;                                              //高位数据写入
 160   2                      TL0 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
 161   2              }                                                                                                 
 162   1              else                                                                                      
 163   1              {                                                                                                 
 164   2                      TH0 = 0;                                                                          //否则按最小值装入
 165   2                      TL0 = 0;                                                                          
 166   2              }                                                                                                 
 167   1                                                                                                                
 168   1          TMOD = 0x01;                                                                          //定时器0工作于十六位定时器模式
 169   1              ET0 = 1;                                                                                  //使能定时器1
 170   1              TR0 = 1;                                                                                  //开始计时
 171   1              EA  = 1;                                                                                  //开全局中断
 172   1      }
 173          
 174          /*****************************************
 175           *中断函数内部更新定时器赋值函数 
 176           *例:timer0_update(1000); 重装定时器初值为1000us 
 177           *****************************************/
 178          void timer0_update11(uint time_us)
C51 COMPILER V9.02   VECTOR                                                                01/31/2016 12:31:26 PAGE 4   

 179          {
 180   1              uint time_mod;
 181   1      
 182   1              if(time_us <= 24576)                                                      //判断是否超过定时器能够设定的最大值
 183   1              {                                                                                                 
 184   2                      time_mod = 65536 - (time_us * 11 / 12);           //计算定时器需要装入的数值
 185   2                      TH0 = time_mod >> 8;                                              //高位数据写入
 186   2                      TL0 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
 187   2              }                                                                                                 
 188   1              else                                                                                      
 189   1              {                                                                                                 
 190   2                      TH0 = 0;                                                                          //否则按最小值装入
 191   2                      TL0 = 0;                                                                          
 192   2              }                                                                                                 
 193   1      }       


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    380    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
