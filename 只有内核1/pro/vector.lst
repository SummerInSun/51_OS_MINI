C51 COMPILER V9.02   VECTOR                                                                03/06/2016 13:46:23 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE VECTOR
OBJECT MODULE PLACED IN .\vector.obj
COMPILER INVOKED BY: D:\msprograms\keil4\C51\BIN\C51.EXE ..\src\vector.c OPTIMIZE(2,SPEED) BROWSE INCDIR(../head) DEBUG 
                    -OBJECTEXTEND PRINT(.\vector.lst) OBJECT(.\vector.obj)

line level    source

   1          #include <vector.h>
   2          
   3          /**********基于24M晶振**********/
   4          
   5          /*****************************************
   6           *定时器1初始化函数
   7           *例:timer1_init(1000); 定时1000us 
   8           *****************************************/
   9          void timer1_init(uint time_us)
  10          {
  11   1              uint time_mod;
  12   1      
  13   1              if(time_us <= 32768)                              //判断是否超过定时器能够设定的最大值
  14   1              {
  15   2                      time_mod = 65536 - (time_us * 2);                 //计算定时器需要装入的数值
  16   2                      TH1 = time_mod >> 8;                                              //高位数据写入
  17   2                      TL1 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
  18   2              }
  19   1              else
  20   1              {
  21   2                      TH1 = 0;                                                                          //否则按最小值装入
  22   2                      TL1 = 0;
  23   2              }
  24   1      
  25   1          AUXR &= 0xBF;                                                                         //定时器时钟12T模式
  26   1              TMOD &= 0x0F;                                                                     //设置定时器模式
  27   1              TMOD |= 0x00;                                                                     //设置定时器模式
  28   1              TF1 = 0;                                                                                  //清除TF1标志
  29   1      //      TR1 = 1;                                                                                  //开始计时
  30   1      //      ET1 = 1;                                                                                  //使能定时器1
  31   1      //      EA  = 1;                                                                                  //开全局中断
  32   1      }
  33          
  34          /*****************************************
  35           *中断函数内部更新定时器赋值函数 
  36           *例:timer1_update(1000); 重装定时器初值为1000us 
  37           *****************************************/
  38          void timer1_update(uint time_us)
  39          {
  40   1              uint time_mod;
  41   1      
  42   1              if(time_us <= 32768)                                                      //判断是否超过定时器能够设定的最大值
  43   1              {                                                                                                 
  44   2                      time_mod = 65536 - (time_us * 2);                 //计算定时器需要装入的数值
  45   2                      TH1 = time_mod >> 8;                                              //高位数据写入
  46   2                      TL1 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
  47   2              }                                                                                                 
  48   1              else                                                                                      
  49   1              {                                                                                                 
  50   2                      TH1 = 0;                                                                          //否则按最小值装入
  51   2                      TL1 = 0;
  52   2              }
  53   1      }
  54          
C51 COMPILER V9.02   VECTOR                                                                03/06/2016 13:46:23 PAGE 2   

  55          /*****************************************
  56           *定时器0初始化函数
  57           *例:timer0_init(1000); 定时1000us 
  58           *****************************************/
  59          void timer0_init(uint time_us)
  60          {
  61   1              uint time_mod;
  62   1      
  63   1              if(time_us <= 32768)                                                      //判断是否超过定时器能够设定的最大值
  64   1              {                                                                                                 
  65   2                      time_mod = 65536 - (time_us * 2);                 //计算定时器需要装入的数值
  66   2                      TH0 = time_mod >> 8;                                              //高位数据写入
  67   2                      TL0 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
  68   2              }                                                                                                 
  69   1              else                                                                                      
  70   1              {                                                                                                 
  71   2                      TH0 = 0;                                                                          //否则按最小值装入
  72   2                      TL0 = 0;                                                                          
  73   2              }                                                                                                 
  74   1              
  75   1              AUXR &= 0xBF;                                                                     //定时器时钟12T模式
  76   1              TMOD &= 0x0F;                                                                     //设置定时器模式                                                                                                
  77   1          TMOD |= 0x00;                                                                         //定时器0工作于十六位定时器模式
  78   1              ET0 = 1;                                                                                  //使能定时器1
  79   1              TR0 = 1;                                                                                  //开始计时
  80   1              EA  = 1;                                                                                  //开全局中断
  81   1      }
  82          
  83          /*****************************************
  84           *中断函数内部更新定时器赋值函数 
  85           *例:timer0_update(1000); 重装定时器初值为1000us 
  86           *****************************************/
  87          void timer0_update(uint time_us)
  88          {
  89   1              uint time_mod;
  90   1      
  91   1              if(time_us <= 32768)                                                      //判断是否超过定时器能够设定的最大值
  92   1              {                                                                                                 
  93   2                      time_mod = 65536 - (time_us * 2);                 //计算定时器需要装入的数值
  94   2                      TH0 = time_mod >> 8;                                              //高位数据写入
  95   2                      TL0 = time_mod;                                                           //地位数据写入 相当于 TH1 = time_mod % 256
  96   2              }                                                                                                 
  97   1              else                                                                                      
  98   1              {                                                                                                 
  99   2                      TH0 = 0;                                                                          //否则按最小值装入
 100   2                      TL0 = 0;                                                                          
 101   2              }                                                                                                 
 102   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    272    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
